var __index = {"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Guide","text":""},{"location":"index.html#getting-started","title":"Getting Started","text":"<p>Welcome to the documentation for the <code>SAP Cloud Application Generator</code>.</p> <p>This powerful tool enables you to quickly <code>scaffold</code> applications, allowing you to build functional apps in a matter of minutes. With our <code>intuitive interface</code>, you have convenient access to a range of <code>frontend</code> and <code>backend</code> packages, making the app scaffolding process effortless and efficient.</p>"},{"location":"index.html#why-this","title":"Why this?","text":"<p>When it comes to developing and deploying apps in SAP Business Technology Platform (BTP), the process of building a ready-made app can be quite tedious.</p>"},{"location":"index.html#frontend","title":"Frontend","text":"<p>Currently, there are a few options available for building UI apps:</p> <ol> <li> <p><code>Deploying Static Files</code>: One approach is to deploy the static files directly within the app. This means including the necessary HTML, CSS, and JavaScript files in the app itself. Alternatively, you can deploy these files to the HTML5 repository and utilize the Approuter, which serves as a proxy to route requests to the correct destination.</p> </li> <li> <p><code>Utilizing Existing Generators</code>: Another option is to leverage the existing generator tools that are available. These generators provide a streamlined way to quickly scaffold UI apps by generating the necessary code and project structure based on predefined templates. This can significantly reduce manual effort and speed up the development process.</p> </li> </ol> <p>Both approaches have their advantages and can be chosen based on the specific requirements and preferences of the <code>development team</code>.</p> <p>When it comes to developing <code>backend</code> apps, the <code>XSUAA</code> service in <code>SAP BTP</code> is commonly used for <code>authorization</code> and <code>authentication</code>. However, depending on the programming language you choose, the setup process may vary in length and complexity.</p>"},{"location":"index.html#backend","title":"Backend","text":"<p>Setting up XSUAA service for authorization and authentication typically involves the following steps:</p> <ol> <li> <p><code>Configuring Security</code>: You need to define security configurations in the XSUAA service instance with the available libraries out there.</p> </li> <li> <p><code>Implementing Authorization and Authentication Logic</code>: Once the integration is in place, you will need to implement the authorization and authentication logic within your backend application. This includes validating tokens, checking scopes and permissions, and enforcing security rules to protect sensitive data and endpoints.</p> </li> </ol> <p>The complexity and duration of these steps may vary depending on the specific backend language and frameworks you are working with. It is recommended to consult the documentation and resources specific to your chosen language to ensure a smooth setup process for <code>XSUAA</code> service integration.</p>"},{"location":"index.html#intergration","title":"Intergration","text":"<p>Indeed, after setting up both the <code>frontend</code> and <code>backend</code> components, it is essential to properly configure the <code>destinations</code> for seamless interaction between them. This applies to both local development and deployment scenarios.</p> <p>Destinations serve as connection points that define the endpoints and connectivity details of the backend services. They allow the frontend application to communicate with the backend, enabling data retrieval, manipulation, and other interactions.</p> <p>For local development, you typically configure destinations to connect the frontend application running on your local machine with the backend services deployed either locally or remotely. This involves specifying the <code>destination URL</code>,<code>authentication details</code>, and other necessary parameters. The exact process may vary depending on the development environment and tools you are using.</p> <p>During deployment, the destination configurations need to be adjusted to match the deployment environment. This includes updating the destination URLs, authentication credentials, and other relevant settings to ensure proper communication between the frontend and backend services.</p> <p>It's important to ensure that the destination configurations are accurate and up to date, as any misconfiguration can result in communication errors or failed interactions between the frontend and backend components.</p> <p>Consulting the documentation specific to your development environment, such as <code>SAP BTP</code>, can provide detailed guidance on configuring destinations for both local development and deployment scenarios.</p> <p>TL;DR</p> <p>Setting up the full stack for <code>development</code> and <code>deployment</code> can indeed be a challenging task. However, with our tool, this process becomes incredibly simplified, requiring just <code>one click</code>.</p>"},{"location":"docs/others/mta.html","title":"Multi Target Application","text":""},{"location":"docs/others/mta.html#about","title":"About","text":"<p>If you choose <code>cloud deployment</code>, an <code>mta.yaml</code> file will be automatically generated, containing all the necessary configurations for the selected packages, including any required destinations. To generate a deployable <code>*.mtar</code> (Multi-Target Application Archive) file for <code>SAP BTP</code> (Business Technology Platform), you can easily build it.</p> <p>If XSUAA is selected, a <code>xs-security.json</code> file will also be generated</p>"},{"location":"docs/others/mta.html#usage-instructions","title":"Usage Instructions","text":"<p>Before Building</p> <p>Please make sure you have the <code>mbt</code> installed in you PC. You can also use <code>npm i -g mbt</code> to install  </p> <p>To build a deployable <code>MTAR</code>, simply run <pre><code>mbt build\n</code></pre></p> <p>Before Deploying</p> <p>Please make sure you have the <code>cf</code> installed in you PC. You can also use link to download &amp; install</p> <p>To deploy the <code>MTAR</code> to <code>SAP BTP</code>, simply run <pre><code>cf deploy mta_archives/&lt;file_name&gt;.mtar\n</code></pre></p>"},{"location":"docs/others/services/html5-repo.html","title":"HTML5 Repository","text":"<p>If a <code>frontend</code> package is selected, the <code>mta.yaml</code> file will include <code>HTML5</code> repository configuration for the deployment of static files. On the other hand, if <code>XSUAA</code> is enabled, the <code>application</code> will retrieve static files from the HTML5 repository in a<code>protected mode</code>.</p> <p>For <code>MTA</code> (Multi-Target Application) deployment, the <code>mta.yaml</code> file will contain the code for creating the <code>html5-repo</code> service as well.</p> <pre><code>  - name: &lt;app_name&gt;-repo-runtime\n    type: org.cloudfoundry.managed-service\n    parameters:\n      service-plan: app-runtime\n      service: html5-apps-repo\n  - name: &lt;app_name&gt;-repo-host\n    type: org.cloudfoundry.managed-service\n    parameters:\n      service-plan: app-host\n      service: html5-apps-repo\n</code></pre>"},{"location":"docs/others/services/xsuaa.html","title":"Extended UAA","text":"<p>Depending on whether XSUAA is selected, each package will have a distinct configuration in place to verify the JWT token and scopes of the incoming user if necessary. </p> <p>For further information on XSUAA, please refer to the following link</p> <p>For <code>MTA</code> (Multi-Target Application) deployment, the <code>mta.yaml</code> file will contain the code for creating the <code>XSUAA</code> service as well.</p> <pre><code>- name: &lt;app_name&gt;-xsuaa\n  type: org.cloudfoundry.managed-service\n  parameters:\n    service-plan: application\n    service: xsuaa\n    path: ./xs-security.json\n</code></pre>"},{"location":"docs/packages/backend/nodejs.html","title":"Node JS","text":""},{"location":"docs/packages/backend/nodejs.html#about","title":"About","text":"<p>The <code>NodeJS</code> application utilizes the Express framework to bootstrap the application. Express is a popular web application framework for Node.js that simplifies the development of server-side applications.</p> <p>When XSUAA is enabled, the <code>NodeJS</code> application makes use of various <code>@sap</code> libraries to validate the <code>JWT</code> (JSON Web Tokens) tokens.</p> <p>Additionally, <code>nodemon</code> is utilized for live application reload. Nodemon is a development tool that monitors changes to the application files and automatically restarts the server when any modifications are detected. This enables a smoother development experience as you can see the changes in real-time without having to manually restart the server after every code change.</p> <p>By combining Express, XSUAA libraries, and nodemon, the NodeJS application provides a robust and efficient foundation for building secure and responsive server-side applications.</p> <p>The project configuration may vary depending on whether <code>XSUAA</code> (SAP Cloud Foundry service for authorization and authentication) is enabled or not.</p> <pre><code>|---nodejs\n|   |---src\n|   |   |---middlewares\n|   |   |---routes\n|   |   |---types\n|   |   |---app.ts\n|   |   |---index.ts\n|   |---.cfignore\n|   |---.editorconfig\n|   |---.eslintignore\n|   |---.lintstagedrc.json\n|   |---.prettierignore\n|   |---.prettierrc.json\n|   |---package.json\n</code></pre> <p>If XSUAA is enabled</p> <p>To ensure proper configuration of your frontend application, you will need to include a <code>.env</code> file in the <code>root</code> directory of the frontend project. This file should contain the necessary environment variables and configurations for <code>VCAP_SERVICES</code> and <code>VCAP_APPLICATION</code>.</p> <p>Here is an example for the same:</p> <p></p>"},{"location":"docs/packages/backend/nodejs.html#usage-instructions","title":"Usage Instructions","text":"<p>If XSUAA is enabled</p> <p>To check if the user is authorized, you can use the helper function <code>auth()</code></p> <pre><code>router.get('/', auth(), async (req: Request, res: Response) =&gt; {\n    res.send('Hello World!');\n});\n</code></pre> <p>To check if the user is authorized &amp; has a role, you can use the helper function <code>auth('&lt;role&gt;)</code></p> <pre><code>router.get('/', auth(\"import,export\"), async (req: Request, res: Response) =&gt; {\n    res.send('Hello World!');\n});\n</code></pre> <p>To start the application simply run:</p> <p>NPM <pre><code>npm run dev\n</code></pre></p> <p>YARN <pre><code>yarn run dev\n</code></pre></p> <p>PNPM <pre><code>pnpm dev\n</code></pre></p>"},{"location":"docs/packages/backend/python.html","title":"Python","text":""},{"location":"docs/packages/backend/python.html#about","title":"About","text":"<p>The <code>Python</code> application utilizes <code>Flask</code> for effective API management. When <code>XSUAA</code> is enabled, a <code>decorator</code> helper is in place to seamlessly check for <code>authorization</code> and <code>authentication</code>.</p> <p>The project configuration may vary depending on whether <code>XSUAA</code> (SAP Cloud Foundry service for authorization and authentication) is enabled or not.</p> <pre><code>|---python\n|   |---Procfile\n|   |---requirements.txt\n|   |---server.py\n|   |---xsuaa_check.py\n</code></pre> <p>If XSUAA is enabled</p> <p>To ensure proper configuration of your frontend application, you will need to include a <code>.env</code> file in the <code>root</code> directory of the frontend project. This file should contain the necessary environment variables and configurations for <code>VCAP_SERVICES</code> and <code>VCAP_APPLICATION</code>.</p> <p>Here is an example for the same:</p> <p></p>"},{"location":"docs/packages/backend/python.html#usage-instructions","title":"Usage Instructions","text":"<p>If XSUAA is enabled</p> <p>To check if the user is authorized, you can use the decorator function <code>auth()</code></p> <pre><code>@app.route('/home')\n@auth()\n</code></pre> <p>To check if the user is authorized &amp; has a role, you can use the decorator function <code>auth('&lt;role&gt;)</code></p> <pre><code>@app.route('/home')\n@auth(scopes='import,export')\n</code></pre> <p>To start the application simply run:</p> <p>Python <pre><code>python server.py\n</code></pre></p> <p>Flask <pre><code>flask --app &lt;appname&gt;\n</code></pre></p>"},{"location":"docs/packages/backend/spring-boot.html","title":"Spring Boot","text":""},{"location":"docs/packages/backend/spring-boot.html#about","title":"About","text":"<p>The <code>Spring Boot</code> application utilizes <code>Maven</code> for efficient dependency management. It adheres to the <code>MVC</code> architecture for seamless application execution. Depending on whether <code>XSUAA</code> is selected or not, you may obtain a configuration bean file that handles protected resources effectively.</p> <p>The project configuration may vary depending on whether <code>XSUAA</code> (SAP Cloud Foundry service for authorization and authentication) is enabled or not.</p> <pre><code>|---springboot\n|   |---.mvn\n|   |---src\n|   |   |---main\n|   |   |   |---java\n|   |   |   |---resources\n|   |   |---test\n|   |---mvnw\n|   |---mvnw.cmd\n|   |---pom.xml\n</code></pre> <p>If XSUAA is enabled</p> <p>To ensure proper configuration of your spring boot application, you will need to include a enviourment variables in the project. It should contain the necessary environment and configurations for <code>VCAP_SERVICES</code> and <code>VCAP_APPLICATION</code>.</p> <p>Here is an example for the same if you're using Intellij for running the application:</p> <p></p>"},{"location":"docs/packages/backend/spring-boot.html#usage-instructions","title":"Usage Instructions","text":"<p>If XSUAA is enabled</p> <p>To check if the user is authorized, you can use the <code>SecurityConfiguration.java</code> class to ensure per API level protection</p> <pre><code>.requestMatchers(\"/api/v2/**\").hasAuthority(\"SCOPE\")\n.requestMatchers(\"/api/**\").authenticated()\n</code></pre> <p>To start the application simply run:</p> <p>Maven <pre><code>mvn spring-boot:run\n</code></pre></p> <p>Java <pre><code>java -jar path/to/your/jarfile.jar &lt;namespace&gt;\n</code></pre></p>"},{"location":"docs/packages/frontend/react.html","title":"React","text":""},{"location":"docs/packages/frontend/react.html#about","title":"About","text":"<p>The available <code>React</code> generated package offers the flexibility to create React-based components for your application. It leverages Vite for tooling and bootstrapping, providing a fast and efficient development experience.</p> <p>To enable access for XSUAA (SAP Cloud Foundry service for authorization and authentication), an embedded approuter is used. The approuter acts as a middleware component that handles authentication and authorization for protected resources.</p> <p>In this setup, the frontend URL is configured as a destination to access protected resources. This means that the approuter will intercept requests to the frontend URL and validate the user's authentication status and permissions before allowing access to the protected resources.</p> <p>By utilizing the embedded approuter and configuring the frontend URL as a destination, your application ensures secure access to protected resources while leveraging the React components and the benefits of the Vite framework.</p> <p>The project configuration may vary depending on whether <code>XSUAA</code> (SAP Cloud Foundry service for authorization and authentication) is enabled or not.</p> <pre><code>|---react\n|   |---approuter\n|   |---deployer\n|   |---public\n|   |---src\n|   |   |---assets\n|   |   |---App.css\n|   |   |---App.tsx\n|   |   |---index.css\n|   |   |---main.tsx\n|   |   |---vite-env.d.ts\n|   |---index.html\n|   |---package.json\n|   |---tsconfig.node.json\n|   |---xs-app.json\n</code></pre> <p>If XSUAA is enabled</p> <p>To ensure proper configuration of your frontend application, you will need to include a <code>default-env.json</code> file in the <code>public</code> directory of the frontend project. This file should contain the necessary environment variables and configurations for <code>VCAP_SERVICES</code>, <code>VCAP_APPLICATION</code>, and <code>destinations</code>.</p> <p>If XSUAA is disabled</p> <p>This file should contain only the <code>destinations</code> array</p> <p>Here is an example for the same:</p> <p></p>"},{"location":"docs/packages/frontend/react.html#usage-instructions","title":"Usage Instructions","text":"<p>Destinations</p> <p>The destination URL can either point to the <code>local server</code> of your backend or any of the <code>deployed</code> backend application. </p> <p>In addition to the backend destination, a frontend destination should also be provided to ensure protected access of <code>react</code> application. The default URL for accessing the UI is http://localhost:5000</p> <p>To start the application simply run:</p> <p>NPM <pre><code>npm run dev\n</code></pre></p> <p>YARN <pre><code>yarn run dev\n</code></pre></p> <p>PNPM <pre><code>pnpm dev\n</code></pre></p>"},{"location":"docs/packages/frontend/ui5.html","title":"UI5","text":""},{"location":"docs/packages/frontend/ui5.html#about","title":"About","text":"<p>The available <code>UI5</code> generated package provides the flexibility to create a freestyle UI5 application. You can leverage the wide range of components and features available within this package to build your UI5 application according to your specific requirements.</p> <p>The project  configuration may vary depending on whether <code>XSUAA</code> (SAP Cloud Foundry service for authorization and authentication) is enabled or not.</p> <pre><code>|---ui5\n|   |---approuter\n|   |---deployer\n|   |---webapp\n|   |---.editorconfig\n|   |---.eslintignore\n|   |---.eslintrc\n|   |---.gitignore\n|   |---.prettierignore\n|   |---.prettierrc\n|   |---karma-ci.conf.js\n|   |---karma.conf.js\n|   |---package.json\n|   |---tsconfig.json\n|   |---ui5.yaml\n|   |---xs-app.json\n</code></pre> <p>If XSUAA is enabled</p> <p>To ensure proper configuration of your frontend application, you will need to include a <code>default-env.json</code> file in the <code>root</code> directory of the frontend project. This file should contain the necessary environment variables and configurations for <code>VCAP_SERVICES</code>, <code>VCAP_APPLICATION</code>, and <code>destinations</code>.</p> <p>If XSUAA is disabled</p> <p>This file should contain only the <code>destinations</code> array</p> <p>Here is an example for the same:</p> <p></p>"},{"location":"docs/packages/frontend/ui5.html#usage-instructions","title":"Usage Instructions","text":"<p>Destinations</p> <p>The destination URL can either point to the <code>local server</code> of your backend or any of the <code>deployed</code> backend application. The default URL for accessing the UI is http://localhost:5000</p> <p>To start the application simply run:</p> <p>NPM <pre><code>npm run dev\n</code></pre></p> <p>YARN <pre><code>yarn run dev\n</code></pre></p> <p>PNPM <pre><code>pnpm dev\n</code></pre></p>"},{"location":"docs/platform/cli.html","title":"Command Line Interface","text":""},{"location":"docs/platform/cli.html#getting-started","title":"Getting Started","text":"<p>We offer the ability to <code>scaffold</code> your application using the <code>command-line interface</code> (CLI). This provides an alternative method for quickly generating the app's structure and code.</p> <p>By utilizing the <code>CLI</code>, you can execute specific commands to initiate the scaffolding process. This allows for greater flexibility and automation, making it ideal for integrating with build scripts or incorporating into your development workflows.</p> <p>The CLI provides a set of commands and options that enable you to specify the desired app features, select templates, and configure various settings. This way, you can customize the scaffolding process according to your specific requirements.</p> <p>Whether you prefer the convenience of a graphical user interface or the flexibility of the CLI, we offer multiple options to scaffold your app efficiently and effectively. Choose the method that best suits your needs and start building your application with ease.</p>"},{"location":"docs/platform/cli.html#usage-instructions","title":"Usage Instructions","text":"<p>To use the generator, simple run:</p> <p>NPM <pre><code>npm create @ragarwal06/sap-fs-app@latest\n</code></pre></p> <p>YARN <pre><code>yarn create @ragarwal06/sap-fs-app@latest\n</code></pre></p> <p>Compatibility Issues with yarn &gt;1.2x</p> <p>Please note that there have been reported issues with the SAP Cloud Application Generator when using recent versions of the Yarn package manager. If you encounter any problems while using the generator, we recommend trying alternative package managers such as npm or pnpm.</p> <p>PNPM <pre><code>pnpm create @ragarwal06/sap-fs-app@latest\n</code></pre></p> <p></p> <p>This will generate the app in you current workspace. You can directly start using the app. \ud83e\udee1</p>"},{"location":"docs/platform/vscode.html","title":"Visual Studio Code","text":""},{"location":"docs/platform/vscode.html#getting-started","title":"Getting Started","text":"<p>We are committed to providing users with easy access to the <code>SAP Cloud Application Generator</code>. To cater to different preferences and workflows, we offer multiple options for interacting with the generator</p> <p>For developers who prefer working within the Visual Studio Code (VSCode) environment, we offer an extension specifically designed to integrate the <code>SAP Cloud Application Generator</code> seamlessly. By installing and utilizing the extension, you can access the generator's functionality directly within the <code>VSCode</code> editor, enhancing your development experience.</p>"},{"location":"docs/platform/vscode.html#download","title":"Download","text":"<p>Information</p> <p>To download the <code>SAP Cloud Application Generator</code> extension, you can conveniently <code>download</code> the <code>extension</code> from the <code>marketplace</code> using this link. </p> <p>Once the below webpage opens.</p> <p></p> <p>Simply click on the <code>Download</code> button. This action will redirect you to the extension homepage within the <code>Visual Studio Code (VSCode) environment</code>. From there, click on the <code>Install</code> button to initiate the installation process.</p> <p></p> <p>Alternatively, you can directly access the <code>extension manager</code> within your IDE. Open the IDE and navigate to the <code>Extensions</code> view by clicking on the square icon on the left sidebar or using the shortcut <code>Ctrl+Shift+X</code>. In the search bar, enter <code>SAP Cloud Application Generator</code> and locate the extension in the search results. Click on the <code>Install</code> button to download and install the extension.</p>"},{"location":"docs/platform/vscode.html#usage-instructions","title":"Usage Instructions","text":"<ol> <li>Open the command palette (<code>Ctrl+Shift+P</code> on Windows and Linux, <code>Cmd+Shift+P</code> on OS X) and search for <code>SAP Cloud Applications: Generate</code>.</li> <li>Enter the required details.</li> <li>Adjust the packages if desired.</li> <li>Click the <code>Generate</code> button to scaffold the app.</li> </ol> <p>This will generate the app in you current workspace. You can directly start using the app. \ud83e\udee1</p>"},{"location":"extras/info-completed.html","title":"Info completed","text":"<p>Info</p> <p>Symbol  [] indicates completion of week tasks</p>"},{"location":"extras/diagrams/architecture-diagram.html","title":"Architecture diagram","text":"<pre><code>flowchart LR\n  subgraph User\n    User1\n    User2\n    User3\n  end\n  subgraph CLI\n    direction TB\n    renderPackageTitle --&gt; renderGenerator --&gt; prepareDirectoryForPackages\n  end\n  subgraph VSCodeExtension\n  end\n  subgraph UI\n  end\n  subgraph Generator\n    direction TB\n    subgraph Boilerplate\n    direction LR\n        ApplicationDetails\n        BoilerplateFlags\n        AvailablePackagesMap\n    end\n    subgraph Packages\n        direction LR\n          subgraph FrontendPackages\n          direction TB\n              UI5Package\n              ReactPackage\n          end\n          subgraph BackendPackages\n          direction TB\n              NodeJSPackage\n              SpringBootPackage\n          end\n        Package --&gt; UI5Package\n        Package --&gt; ReactPackage\n        Package --&gt; NodeJSPackage\n        Package --&gt; SpringBootPackage\n    end\n    Scaffold\n    Utils\n    Scaffold --&gt; Packages\n    click Package \"https://github.tools.sap/SAP-Cloud-Application-Generator/boilerplate-generator/blob/main/src/installers/frontend/ui5-installer.ts\"\n    click UI5Package \"https://github.tools.sap/SAP-Cloud-Application-Generator/boilerplate-generator/blob/main/src/installers/frontend/ui5-installer.ts\"\n    click ReactPackage \"https://github.tools.sap/SAP-Cloud-Application-Generator/boilerplate-generator/blob/main/src/installers/frontend/react-installer.ts\"\n    click NodeJSPackage \"https://github.tools.sap/SAP-Cloud-Application-Generator/boilerplate-generator/blob/main/src/installers/backend/nodejs-installer.ts\"\n    click SpringBootPackage \"https://github.tools.sap/SAP-Cloud-Application-Generator/boilerplate-generator/blob/main/src/installers/base-installer.ts\"\n    click BoilerplateFlags \"https://github.tools.sap/SAP-Cloud-Application-Generator/boilerplate-generator/blob/main/src/boilerplate/boilterplater-struct.ts#L6\"\n    click AvailablePackagesMap \"https://github.tools.sap/SAP-Cloud-Application-Generator/boilerplate-generator/blob/main/src/utils/packages/packages.ts#L33\"\n    click Scaffold \"https://github.tools.sap/SAP-Cloud-Application-Generator/boilerplate-generator/blob/main/src/scaffold/scaffold.ts\"\n    click Utils \"https://github.tools.sap/SAP-Cloud-Application-Generator/boilerplate-generator/tree/main/src/utils\"\n  end\n  User1 --&gt; CLI\n  User2 --&gt; VSCodeExtension\n  User3 --&gt; UI\n  CLI --&gt; Generator</code></pre>"},{"location":"extras/diagrams/cli-sequence-diagram.html","title":"Cli sequence diagram","text":"<pre><code>sequenceDiagram\n  autonumber\n  User-&gt;&gt;CLI: Initialize\n  loop Inputs\n      CLI-&gt;&gt;User: Ask details\n      User-&gt;&gt;CLI: Record input\n  end\n  CLI-&gt;&gt;Generator: Request for app scaffold\n  Generator--&gt;&gt;CLI: Provide Logs\n  CLI--&gt;&gt;User: Show Logs\n  CLI-&gt;&gt;Generator: Create scaffold\n  Generator--&gt;&gt;User: Scaffold created</code></pre>"},{"location":"extras/diagrams/vsix-ui-sequence-diagram.html","title":"Vsix ui sequence diagram","text":"<pre><code>sequenceDiagram\n  autonumber\n  User-&gt;&gt;VSCode/UI: Initialize UI\n  loop Inputs\n      VSCode/UI-&gt;&gt;User: Ask details in a form\n      User-&gt;&gt;VSCode/UI: Record input\n  end\n  VSCode/UI-&gt;&gt;Generator: Request for app scaffold\n  Generator--&gt;&gt;VSCode/UI: Provide Logs\n  VSCode/UI--&gt;&gt;User: Show Logs\n  VSCode/UI-&gt;&gt;Generator: Create scaffold\n  Generator--&gt;&gt;User: Scaffold created</code></pre>"},{"location":"extras/diagrams/boilerplate/boilerplate-class-diagram.html","title":"Boilerplate class diagram","text":"<pre><code>classDiagram\n  class Boilerplate\n  &lt;&lt;interface&gt;&gt; Boilerplate\n  Boilerplate : +string appName\n  Boilerplate : +AvailablePackagesMap packages\n  Boilerplate : +boolean enableXSUAA\n  Boilerplate : +boolean enableCloudMTASupport\n  Boilerplate : +BoilerplateFlags flags</code></pre>"},{"location":"extras/diagrams/boilerplate/boilerplate-enums-class-diagram.html","title":"Boilerplate enums class diagram","text":"<pre><code>classDiagram\n  class AvailablePackagesMap{\n      &lt;&lt;enumeration&gt;&gt;\n      ui5\n      react\n      springboot\n      nodejs\n  }\n  class BoilerplateFlags\n  &lt;&lt;interface&gt;&gt; BoilerplateFlags\n  BoilerplateFlags : +boolean noGit\n  BoilerplateFlags : +boolean noInstall\n  BoilerplateFlags : +boolean default</code></pre>"},{"location":"extras/diagrams/inquirer/prompConfirm.html","title":"prompConfirm","text":"<pre><code>export const promptConfirm = async (\n  metadata: UserInputMetadataConfirm\n): Promise&lt;boolean&gt; =&gt; {\n  const { confirm } =\n    (await inquirer.prompt) &lt;\n    { confirm: boolean } &gt;\n    {\n      name: \"confirm\",\n      type: \"confirm\",\n      message: metadata.message,\n      default: metadata.confirm,\n    };\n  return confirm;\n};\n</code></pre>"},{"location":"extras/diagrams/inquirer/prompList.html","title":"prompList","text":"<pre><code>export const promptList = async (\n    metadata: UserInputMetadataList,\n): Promise&lt;string&gt; =&gt; {\n    const availableValues = getValueFromChoiceOps(metadata.list);\n    const { list } = await inquirer.prompt&lt;{\n        list: (typeof availableValues)[number];\n    }&gt;({\n        name: 'list',\n        type: 'list',\n        message: metadata.message,\n        choices: metadata.list,\n        default: metadata.value,\n    });\n    return list;\n};\n</code></pre>"},{"location":"extras/diagrams/inquirer/promptInput%20copy.html","title":"promptInput copy","text":"<pre><code>export const promptInput = async (\n    metadata: UserInputMetadataInput,\n): Promise&lt;string&gt; =&gt; {\n    const { input } = await inquirer.prompt&lt;{\n        input: string;\n    }&gt;({\n        name: 'input',\n        type: 'input',\n        message: metadata.message,\n        default: metadata.input,\n        transformer: (input: string) =&gt; input.trim(),\n    });\n    return input;\n};\n</code></pre>"},{"location":"extras/diagrams/inquirer/promptInput.html","title":"promptInput","text":"<pre><code>export const promptInput = async (\n    metadata: UserInputMetadataInput,\n): Promise&lt;string&gt; =&gt; {\n    const { input } = await inquirer.prompt&lt;{\n        input: string;\n    }&gt;({\n        name: 'input',\n        type: 'input',\n        message: metadata.message,\n        default: metadata.input,\n        transformer: (input: string) =&gt; input.trim(),\n    });\n    return input;\n};\n</code></pre>"},{"location":"extras/diagrams/package/package-class-diagram.html","title":"Package class diagram","text":"<pre><code>classDiagram\n  class Package\n  &lt;&lt;interface&gt;&gt; Package\n  Package : +PackageType type\n  Package : +string displayName\n  Package : +PackageOptions options\n  Package : +Boilerplate boilerplate\n  Package : +Record~string, UserInputMetadata~ metadata\n  Package : +scaffold() void\n\n  class UI5Package\n  UI5Package : +scaffold() void\n\n  class ReactPackage\n  ReactPackage : +scaffold() void\n\n  class NodeJSPackage\n  NodeJSPackage : +scaffold() void\n\n  class SpringBootPackage\n  SpringBootPackage : +scaffold() void\n\n  Package --|&gt; UI5Package\n  Package --|&gt; ReactPackage\n  Package --|&gt; NodeJSPackage\n  Package --|&gt; SpringBootPackage</code></pre>"},{"location":"extras/diagrams/package/package-enums-class-diagram.html","title":"Package enums class diagram","text":"<pre><code>classDiagram\n  class PackageType{\n      &lt;&lt;enumeration&gt;&gt;\n      frontend\n      backend\n      unknown\n  }\n  class PackageManager{\n    &lt;&lt;enumeration&gt;&gt;\n    npm\n    yarn\n    pnpm\n}</code></pre>"},{"location":"extras/diagrams/package/package-manager-class-diagram.html","title":"Package manager class diagram","text":"<pre><code>classDiagram\n  class PackageManager{\n      &lt;&lt;enumeration&gt;&gt;\n      npm\n      yarn\n      pnpm\n  }</code></pre>"},{"location":"extras/diagrams/package/package-metadata-class-diagram.html","title":"Package metadata class diagram","text":"<pre><code>classDiagram\n  class PackageMetadata\n  &lt;&lt;interface&gt;&gt; PackageMetadata\n  PackageMetadata : +string dir\n  PackageMetadata : +string noInstall\n  PackageMetadata : +PackageManager packageManager</code></pre>"},{"location":"extras/diagrams/package/package-options-class-diagram.html","title":"Package options class diagram","text":"<pre><code>classDiagram\n  class PackageOptions\n  &lt;&lt;interface&gt;&gt; PackageOptions\n  PackageOptions : +string displayName\n  PackageOptions : +PackageType type\n  PackageOptions : +Record~string, UserInputMetadata~ metadata\n  PackageOptions : +string className</code></pre>"},{"location":"extras/diagrams/package/user-input-metadata-class-diagram.html","title":"User input metadata class diagram","text":"<pre><code>classDiagram\n  class UserInputMetadata\n  &lt;&lt;interface&gt;&gt; UserInputMetadata\n  UserInputMetadata : +string displayName\n  UserInputMetadata : +UserInputMetadataTypes type\n  UserInputMetadata : +string message\n  UserInputMetadata : +string value\n  class UserInputMetadataTypes{\n    &lt;&lt;enumeration&gt;&gt;\n    input\n    confirm\n    list\n  }</code></pre>"},{"location":"extras/diagrams/schema/packages/nodejs.html","title":"Nodejs","text":"<pre><code>{\n  className: \"NodeJSPackage\",\n  displayName: \"Node JS\",\n  type: \"backend\",\n  metadata:\n    {\n      name:\n        {\n          name: \"name\",\n          type: \"input\",\n          message: \"Specify the nodejs package name?\",\n          value: \"nodejsproject\",\n        },\n    },\n}\n</code></pre>"},{"location":"extras/diagrams/schema/packages/react.html","title":"React","text":"<pre><code>{\n  className: \"ReactPackage\",\n  displayName: \"React\",\n  type: \"frontend\",\n  metadata:\n    {\n      name:\n        {\n          name: \"name\",\n          type: \"input\",\n          message: \"Specify the react package name?\",\n          value: \"reactproject\",\n        },\n    },\n}\n</code></pre>"},{"location":"extras/diagrams/schema/packages/sprinboot.html","title":"Sprinboot","text":"<pre><code>{\n  className: \"SpringBootPackage\",\n  displayName: \"Spring Boot\",\n  type: \"backend\",\n  metadata:\n    {\n      name:\n        {\n          name: \"name\",\n          type: \"input\",\n          message: \"Specify the spring boot package name?\",\n          value: \"springbootproject\",\n        },\n      namespace:\n        {\n          name: \"namespace\",\n          type: \"input\",\n          message: \"Specify the spring boot package namespace?\",\n          value: \"com.sap\",\n        },\n    },\n}\n</code></pre>"},{"location":"extras/diagrams/schema/packages/ui5.html","title":"Ui5","text":"<pre><code>{\n  className: \"UI5Package\",\n  displayName: \"SAPUI5/OpenUI5\",\n  type: \"frontend\",\n  metadata:\n    {\n      name:\n        {\n          name: \"name\",\n          type: \"input\",\n          message: \"Specify the ui5 package name?\",\n          value: \"ui5project\",\n        },\n      namespace:\n        {\n          name: \"namespace\",\n          type: \"input\",\n          message: \"Specify the ui5 package namespace?\",\n          value: \"com.sap\",\n        },\n    },\n}\n</code></pre>"},{"location":"extras/diagrams/schema/user-inputs/default.html","title":"Default","text":"<pre><code>{\n  name: { name: \"default\", alt: \"y\" },\n  description: \"Tell the CLI to bypass &amp; use the default options\",\n  isArgument: false,\n  message: \"Would you like to continue with default options?\",\n  type: \"confirm\",\n  confirm: false,\n} as UserInputMetadataConfirm\n</code></pre>"},{"location":"extras/diagrams/schema/user-inputs/enableMTA.html","title":"enableMTA","text":"<pre><code>{\n  name: { name: \"enableCloudMTASupport\", alt: \"mta\" },\n  description: \"Enable MTA deployment support for SAP BTP\",\n  isArgument: false,\n  message: \"Enable MTA deployment support for SAP BTP?\",\n  type: \"confirm\",\n  confirm: true,\n} as UserInputMetadataConfirm\n</code></pre>"},{"location":"extras/diagrams/schema/user-inputs/enableXSUAA.html","title":"enableXSUAA","text":"<pre><code>{\n  name: { name: \"enableXSUAA\", alt: \"ex\" },\n  description: \"Enable XSUAA Support\",\n  isArgument: false,\n  message: \"Enable XSUAA Support?\",\n  type: \"confirm\",\n  confirm: true,\n} as UserInputMetadataConfirm\n</code></pre>"},{"location":"extras/diagrams/schema/user-inputs/name.html","title":"Name","text":"<pre><code>{\n  name: { name: \"name\", alt: \"\" },\n  description: \"The name of the application and the directory name\",\n  isArgument: true,\n  message: \"Specify the project name.\",\n  type: \"input\",\n  input: \"sap-ts-app\",\n} as UserInputMetadataInput\n</code></pre>"},{"location":"extras/diagrams/schema/user-inputs/noGit.html","title":"noGit","text":"<pre><code>{\n  name: { name: \"noGit\", alt: \"ng\" },\n  description: \"Tell the CLI not to initialize the app as a GIT repository\",\n  isArgument: false,\n  message: \"Initialize new Git repository?\",\n  type: \"confirm\",\n  confirm: false,\n} as UserInputMetadataConfirm\n</code></pre>"},{"location":"extras/diagrams/schema/user-inputs/noInstall.html","title":"noInstall","text":"<pre><code>{\n  name: { name: \"noInstall\", alt: \"ni\" },\n  description: \"Tell the CLI to skip installing the dependencies\",\n  isArgument: false,\n  message: \"Would you like skip installing all the dependencies?\",\n  type: \"confirm\",\n  confirm: false,\n} as UserInputMetadataConfirm\n</code></pre>"},{"location":"extras/diagrams/schema/user-inputs/version.html","title":"Version","text":"<pre><code>{\n  name: { name: \"version\", alt: \"v\" },\n  description: \"Specify the version of the project\",\n  isArgument: false,\n  message: \"\",\n  type: \"input\",\n  input: \"0.0.1\",\n} as UserInputMetadataInput\n</code></pre>"},{"location":"extras/diagrams/user-input/flag-names-class-diagram.html","title":"Flag names class diagram","text":"<pre><code>classDiagram\n  class FlagsNames\n  &lt;&lt;interface&gt;&gt; FlagsNames\n  FlagsNames : +AvailableFlagsType name\n  FlagsNames : +string alt\n  class ChoiceOps\n    &lt;&lt;interface&gt;&gt; ChoiceOps\n    ChoiceOps : +string value\n    ChoiceOps : +string name\n    ChoiceOps : +string short\n  class AvailableFlagsType{\n    &lt;&lt;enumeration&gt;&gt;\n    name\n    noGit\n    noInstall\n    default\n    version\n    enableXSUAA\n    enableCloudMTASupport\n  }\nclass UserInputMetadataTypes{\n    &lt;&lt;enumeration&gt;&gt;\n    input\n    confirm\n    list\n  }</code></pre>"},{"location":"extras/diagrams/user-input/user-input-metadata-class-diagram.html","title":"User input metadata class diagram","text":"<pre><code>classDiagram\n  class UserInputMetadataOptions\n  &lt;&lt;interface&gt;&gt; UserInputMetadataOptions\n  UserInputMetadataOptions : +FlagsNames name\n  UserInputMetadataOptions : +string description\n  UserInputMetadataOptions : +boolean isArgument\n  UserInputMetadataOptions : +string message\n  UserInputMetadataOptions : +UserInputMetadataTypes type\n  class UserInputMetadataInput\n  &lt;&lt;interface&gt;&gt; UserInputMetadataInput\n  UserInputMetadataInput : +string input\n  class UserInputMetadataConfirm\n  &lt;&lt;interface&gt;&gt; UserInputMetadataConfirm\n  UserInputMetadataConfirm : +boolean confirm\n  class UserInputMetadataList\n  &lt;&lt;interface&gt;&gt; UserInputMetadataList\n  UserInputMetadataList : +string value\n  UserInputMetadataList : +ChoiceOps[] list\n  UserInputMetadataOptions --|&gt; UserInputMetadataInput\n  UserInputMetadataOptions --|&gt; UserInputMetadataConfirm\n  UserInputMetadataOptions --|&gt; UserInputMetadataList</code></pre>"},{"location":"outline/background.html","title":"Background","text":""},{"location":"outline/background.html#requirements","title":"Requirements","text":"<p>Launching a new project or proof of concept (POC) can be a time-consuming and challenging task, especially when it comes to setting up the full stack, including the frontend, backend, and local setup and deployment descriptors. The process often involves extensive research and effort to produce a deployment-ready codebase. While various tools address different aspects of the setup process, there isn't a single solution that provides a comprehensive, end-to-end deployment-development ready codebase.</p> <p>Developing a full-stack codebase that utilizes <code>UI5/React</code> for the frontend and <code>NodeJS/Spring Boot</code> for the backend, with the capability to deploy in <code>SAP BTP</code>, can be a complex and demanding task. Integrating multiple technologies in a single codebase, while ensuring proper compatibility and deployment in <code>SAP BTP</code>, can present significant challenges</p> <p><code>SAP BTP</code> offers services for authentication and authorization to applications, which can be consumed to enable these features. However, even after setting up the codebase, manual consumption of these services may be required within the application to fully enable authentication and authorization.</p> <p>In the same vein, there are some common services that are utilized across SAP products, and their setup is generally similar.</p>"},{"location":"outline/background.html#solutions-proposal","title":"Solutions Proposal","text":"<p>To address this challenge, we proposed creating a <code>boilerplate generator</code>. This generator would provide a guided flow for the user, allowing them to choose their preferred frontend and backend framework, as well as opting in to use <code>SAP BTP services</code> for authentication and authorization. This way, the generator would offer a streamlined process for setting up a full-stack codebase and integrating necessary services.</p> <p>To ensure accessibility for users, the application can be presented as either a <code>Command Line Interface (CLI)</code> extension or a <code>Graphical User Interface (UI)</code> application. Currently, with most users utilizing <code>Visual Studio Code (VSCode)</code> as their primary <code>Integrated Development Environment (IDE)</code>, the application can be made available as a <code>VSCode plugin extension</code>.</p> <p>The concept is to have a centralized codebase by abstracting the underlying logic. This will allow us to have an API or extension that targets the generator as either a <code>VSCode extension</code>, a <code>Graphical User Interface (UI)</code> application, or a <code>Command Line Interface (CLI)</code> plugin, resulting in a unified solution.</p>"},{"location":"outline/background.html#relevance-of-the-project-in-sap","title":"Relevance of the project in SAP","text":"<p>At <code>SAP</code>, we initiate multiple projects and <code>Proof-of-Concepts (PoCs)</code> daily. Regardless of whether the employee is at an entry-level or an experienced level, the setup for these projects is typically standardized and time-consuming. Our focus is primarily on deploying our applications to the <code>SAP Business Technology Platform (BTP)</code> and utilizing its extensive array of services. To accomplish this, we primarily use the <code>SAP Cloud MTA tool</code>, which enables us to deploy a fully stacked application in one go. In conclusion, the process involved, starting from modifying code to be compatible with <code>BTP</code>, to creating deployments for various environments, is repetitive and labor-intensive.</p> <p>By utilizing this tool, we anticipate significant time savings in the setup of projects, which typically requires several days or even weeks to complete.</p>"},{"location":"outline/literature-references.html","title":"Literature References","text":""},{"location":"outline/literature-references.html#sap-business-technology-platform","title":"SAP Business Technology Platform","text":"<p>SAP Business Technology Platform (SAP BTP) is a <code>cloud-based platform</code> for developing, deploying, and managing cloud applications.</p>"},{"location":"outline/literature-references.html#visual-studio-code","title":"Visual Studio Code","text":"<p>Visual Studio Code, also commonly referred to as VS Code, is a <code>source-code editor</code> made by Microsoft with the Electron Framework</p>"},{"location":"outline/literature-references.html#nodejs","title":"Node.js","text":"<p>Node.js is a back-end JavaScript runtime environment, runs on the <code>V8 JavaScript Engine</code></p>"},{"location":"outline/literature-references.html#react","title":"React","text":"<p>A JavaScript Library for Building <code>User Interfaces</code>.</p>"},{"location":"outline/literature-references.html#ui5openui5","title":"UI5/OpenUI5","text":"<p>The Comprehensive <code>Open-Source UI Framework</code>.</p>"},{"location":"outline/literature-references.html#spring-boot","title":"Spring Boot","text":"<p>Spring Boot is an open-source <code>Java-based framework</code> used to create a `microservices.</p>"},{"location":"outline/literature-references.html#integrated-development-environment","title":"Integrated Development Environment","text":"<p>An integrated development environment is a software application that provides <code>comprehensive facilities</code> to computer programmers for software development</p>"},{"location":"outline/literature-references.html#command-line-interface","title":"Command Line Interface","text":"<p>A command-line interpreter or command-line processor uses a command-line interface to receive <code>commands from a user</code> in the form of lines of text.</p>"},{"location":"outline/objectives.html","title":"Objectives","text":"<p>The objectives of my project are as follows:</p> <ul> <li>Provide a comprehensive and end-to-end solution for setting up a full-stack codebase</li> <li>Offer a streamlined process for setting up a full-stack codebase, including frontend, backend, and local setup and deployment descriptors</li> <li>Enable users to choose their preferred frontend and backend framework, as well as opt-in to use SAP BTP services for authentication and authorization</li> <li>Present the application as a <code>Command Line Interface (CLI)</code> extension, <code>Graphical User Interface (UI)</code> application, or <code>Visual Studio Code (VSCode) plugin</code> extension</li> <li>Unify the solution by having a centralized codebase that abstracts the underlying logic and can be targeted by an API or extension</li> <li>Reduce the time and effort required to initiate projects and <code>Proof-of-Concepts (PoCs)</code> by utilizing a tool</li> <li>Streamline the repetitive and labor-intensive process involved in setting up projects and deploying applications to <code>SAP Business Technology Platform (BTP)</code></li> <li>Anticipate significant time savings in the setup of projects, which typically requires several days or even weeks to complete.</li> <li>To simplify the process of integrating common services utilized across SAP products.</li> </ul>"},{"location":"outline/scope-of-work.html","title":"Scope of Work","text":"<p>The scope of work is divided into the following segments</p>"},{"location":"outline/scope-of-work.html#design-of-a-generator","title":"Design of a generator","text":"<p>As this is a new endeavor, we must commence by meticulously crafting the codebase for the generator. This will serve as the foundation for the project and set the tone for its future development.</p>"},{"location":"outline/scope-of-work.html#development-of-a-full-stack-codebase","title":"Development of a full-stack codebase","text":"<p>The codebase will utilize UI5/React for the frontend and NodeJS/Spring Boot for the backend, with the capability to deploy in <code>SAP BTP</code>.</p>"},{"location":"outline/scope-of-work.html#boilerplate-generator","title":"Boilerplate generator","text":"<p>The project will involve the creation of a <code>boilerplate generator</code> that provides a streamlined process for setting up a full-stack codebase and integrating necessary services.</p>"},{"location":"outline/scope-of-work.html#vscode-integration","title":"VSCode integration","text":"<p>With most users utilizing <code>Visual Studio Code (VSCode)</code> as their primary <code>Integrated Development Environment (IDE)</code>, the application can be made available as a VSCode plugin extension.</p>"},{"location":"outline/scope-of-work.html#centralized-codebase","title":"Centralized codebase","text":"<p>The project will aim to have a centralized codebase by abstracting the underlying logic, allowing for an API or extension that targets the generator as either a <code>VSCode extension</code>, a <code>Graphical User Interface (UI)</code> application, or a <code>Command Line Interface (CLI)</code> plugin.</p>"},{"location":"outline/scope-of-work.html#automating-sap-btp-services","title":"Automating SAP BTP services","text":"<p>The project will involve automating the consumption of <code>SAP BTP services</code> for authentication and authorization within the application.</p>"}]}